{"version":3,"sources":["components/Menu/Menu.js","components/Home/Home.js","components/page1(About)/About.js","components/page3(Works)/Works.js","components/page2(Skills)/Skills.js","components/page4(Contact)/Contact.js","App.js","serviceWorker.js","index.js"],"names":["Menu","onScroll","e","scrollTop","srcElement","scrollingElement","setState","menu_a","document","getElementsByClassName","menu_container","menu_list","style","window","addEventListener","this","className","onClick","getElementById","scrollIntoView","Component","Home","id","About","link","createElement","rel","href","getElementsByTagName","appendChild","Works","Skills","Contact","App","Boolean","location","hostname","match","ReactDOM","render","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.e3f2ef01.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport \"./Menu.css\";\r\n\r\nclass Menu extends Component {\r\n  componentDidMount() {\r\n    // 스크롤 이벤트 적용\r\n    window.addEventListener(\"scroll\", this.onScroll);\r\n    // console.log(document.getElementsByClassName(\"Home_container\"));\r\n  }\r\n  onScroll = e => {\r\n    // 스크롤 할때마다 state에 scroll한 만큼 scrollTop 값 증가하므로 이를 업데이트해줌,\r\n    //따라서 스크롤 시점에 따라 특정액션을 추후에 state를 활용하여 구현 가능\r\n    const scrollTop = (\"scroll\", e.srcElement.scrollingElement.scrollTop);\r\n    this.setState({ scrollTop });\r\n    // console.log(\"scrollTop\",scrollTop);\r\n    const menu_a = document.getElementsByClassName(\"menu_a\");\r\n    const menu_container = document.getElementsByClassName(\"menu_container\");\r\n    const menu_list = document.getElementsByClassName(\"menu_list\");\r\n    if(scrollTop>0){\r\n        menu_container[0].style = \"background : white\";\r\n        menu_list[0].style = \"color:black\";\r\n    }else{\r\n        menu_container[0].style = \"background : blue\"\r\n        menu_list[0].style = \"color:white\";\r\n    }\r\n\r\n      if (scrollTop >3748-200) {\r\n        menu_a[1].style = \"\";\r\n        menu_a[2].style = \"\";\r\n        menu_a[3].style = \"\";\r\n        menu_a[4].style = \"background : blue; color:white\";\r\n      } else if (scrollTop >2811-200) {\r\n        menu_a[1].style = \"\";\r\n        menu_a[2].style = \"\";\r\n        menu_a[3].style = \"background : blue; color:white\";\r\n        menu_a[4].style = \"\";\r\n      } else if (scrollTop > 1874-200) {\r\n        menu_a[1].style = \"\";\r\n        menu_a[2].style = \"background : blue; color:white\";\r\n        menu_a[3].style = \"\";\r\n        menu_a[4].style = \"\";\r\n      } else if (scrollTop > 937-200) {\r\n        menu_a[1].style = \"background : blue; color:white\";\r\n        menu_a[2].style = \"\";\r\n        menu_a[3].style = \"\";\r\n        menu_a[4].style = \"\";\r\n      } else {\r\n        menu_a[1].style = \"\";\r\n        menu_a[2].style = \"\";\r\n        menu_a[3].style = \"\";\r\n        menu_a[4].style = \"\";\r\n      }\r\n    \r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"menu_container\">\r\n        <div className=\"home\">\r\n          <div\r\n            className=\"menu_a\"\r\n            onClick={() => {\r\n              document.getElementById(\"pageHome\").scrollIntoView();\r\n            }}\r\n          >\r\n            Home\r\n          </div>\r\n        </div>\r\n        <ul className=\"menu_list\">\r\n          <li className=\"menu_item\">\r\n            <div\r\n              className=\"menu_a\"\r\n              onClick={() => {\r\n                document.getElementById(\"page1\").scrollIntoView();\r\n              }}\r\n            >\r\n              <span>About</span>\r\n            </div>\r\n          </li>\r\n          <li className=\"menu_item\">\r\n            <div\r\n              className=\"menu_a\"\r\n              onClick={() => {\r\n                document.getElementById(\"page2\").scrollIntoView();\r\n              }}\r\n            >\r\n              <span>Skills</span>\r\n            </div>\r\n          </li>\r\n          <li className=\"menu_item\">\r\n            <div\r\n              className=\"menu_a\"\r\n              onClick={() => {\r\n                document.getElementById(\"page3\").scrollIntoView();\r\n              }}\r\n            >\r\n              <span>Works</span>\r\n            </div>\r\n          </li>\r\n          <li className=\"menu_item\">\r\n            <div\r\n              className=\"menu_a\"\r\n              onClick={() => {\r\n                document.getElementById(\"page4\").scrollIntoView();\r\n              }}\r\n            >\r\n              <span>Contact</span>\r\n            </div>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Menu;\r\n","import React, { Component } from \"react\";\r\nimport \"./Home.css\"\r\n\r\nclass Home extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"Home_container\" id=\"pageHome\">\r\n        <div className=\"Home_title\">Home</div>\r\n        <div className=\"Home_desc\">\r\n          <div>Hello, o_o</div>\r\n          <div>This Is My</div>\r\n          <div>Front-end Portfolio </div>\r\n          <div>v.1</div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Home;\r\n","import React, { Component } from \"react\";\r\nimport \"./About.css\";\r\n\r\nclass About extends Component {\r\n  render() {\r\n    const link = document.createElement(\"link\");\r\n    link.rel = \"stylesheet\";\r\n    link.href =\r\n      \"https://maxcdn.bootstrapcdn.com/font-awesome/4.4.0/css/font-awesome.min.css\";\r\n    document.getElementsByTagName(\"head\")[0].appendChild(link);\r\n    return (\r\n      <div className=\"About_container\" id=\"page1\">\r\n        <div className=\"About_title\">About</div>\r\n        <div className=\"About_desc\">\r\n          <div className=\"desc_container\">\r\n            <div className=\"desc_item\">\r\n              <div>\r\n                <i className=\"fa fa-search\"></i>\r\n              </div>\r\n              <div className=\"desc_item_article\">\r\n                <h2>Think and Think</h2>\r\n                <p>\r\n                  영미권에서 자기소개서와 가장 의미가 비슷한 말을 뽑으라면\r\n                  Personal statement라는 표현이 가장 적절하다. 의미상으로 자기\r\n                  자신과 자기 자신의 경험에 대해 소개하는 내용으로 같은 의미가\r\n                  되는 글을 이름 붙이자면 personal statement가 맞다.\r\n                </p>\r\n              </div>\r\n            </div>\r\n            <div className=\"desc_item\">\r\n              <div>\r\n                <i className=\"fa fa-search\"></i>\r\n              </div>\r\n              <div className=\"desc_item_article\">\r\n                <h2>Greative</h2>\r\n                <p>\r\n                  또한 에세이나 커버 레터는 자소서랑 완전히 같은 개념은 아니다.\r\n                  가령 미국 대학 입학에 요구하는 자소서는 Essay라는 표현 그대로\r\n                  영미권의 Essay의 형식을 따라야한다. 그나마 에세이는 Personal\r\n                  statement라는 단어로 표현하는 경우도 있다. 다만 그래도 영미권\r\n                  Essay의 형식을 따라야하는 것은 변함이 없다.\r\n                </p>\r\n              </div>\r\n            </div>\r\n            <div className=\"desc_item\">\r\n              <div>\r\n                <i className=\"fa fa-search\"></i>\r\n              </div>\r\n              <div className=\"desc_item_article\">\r\n                <h2>My ways</h2>\r\n                <p>\r\n                  어디까지나 참고하라는 이야기지, 베껴 쓰라는 말이 아니다.\r\n                  오히려 유사해지면 잘릴 가능성이 높아진다. 그러나 적절히\r\n                  참고하고 읽어본다면 매우 좋은 도움이 될 것이다.\r\n                </p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default About;\r\n","import React, { Component } from 'react';\r\n\r\nclass Works extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"Works_container\" id = \"page3\">\r\n            <div className=\"Content_title\">Works</div>\r\n            <div className=\"Content_desc\">\r\n              <div>This is</div>\r\n              <div>Works</div>\r\n              <div>Page</div>\r\n            </div>\r\n          </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Works;","import React, { Component } from 'react';\r\nimport \"./Skills.css\"\r\n\r\nclass Skills extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"Skills_container\" id=\"page2\">\r\n            <div className=\"Content_title\">Skills</div>\r\n            <div className=\"Content_desc\">\r\n              <div>This is</div>\r\n              <div>Skills</div>\r\n              <div>Page</div>\r\n            </div>\r\n          </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Skills;","import React, { Component } from 'react';\r\n\r\nclass Contact extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"Contact_container\" id=\"page4\">\r\n            <div className=\"Content_title\">Contact</div>\r\n            <div className=\"Content_desc\">\r\n              <div>This is</div>\r\n              <div>Contact</div>\r\n              <div>Page</div>\r\n            </div>\r\n          </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Contact;","import React, { Component } from \"react\";\nimport Menu from \"./components/Menu/Menu\";\nimport Home from \"./components/Home/Home\";\nimport About from \"./components/page1(About)/About\";\nimport Works from \"./components/page3(Works)/Works\";\nimport Skills from \"./components/page2(Skills)/Skills\";\nimport Contact from \"./components/page4(Contact)/Contact\";\nimport \"./reset.css\";\nimport \"./App.css\";\n\n\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"full_container\">\n        <Menu />\n        <Home />\n        <About />\n        <Skills />\n        <Works />\n        <Contact />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}